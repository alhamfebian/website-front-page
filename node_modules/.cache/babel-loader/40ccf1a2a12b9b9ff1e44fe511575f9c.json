{"ast":null,"code":"import _classCallCheck from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/alhamfebian/Documents/react-app/src/Time.js\";\nimport React, { Component } from 'react';\nexport var Time =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Time, _Component);\n\n  function Time(props) {\n    var _this;\n\n    _classCallCheck(this, Time);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Time).call(this, props));\n    var time = new Date();\n    _this.state = {\n      day: time.getDay(),\n      month: time.getMonth(),\n      date: time.getDate(),\n      year: time.getFullYear(),\n      time: time.toLocaleTimeString()\n    };\n    _this.countingSecond = _this.countingSecond.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Time, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.intervalID = setInterval(function () {\n        return _this2.countingSecond();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.intervalID);\n    }\n  }, {\n    key: \"countingSecond\",\n    value: function countingSecond() {\n      var time = new Date();\n      this.setState = {\n        day: time.getDay(),\n        month: time.getMonth(),\n        date: time.getDate(),\n        year: time.getFullYear(),\n        time: time.toLocaleTimeString()\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      return React.createElement(\"p\", {\n        className: \"App-clock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"The time is \", this.state.time, \".\");\n    }\n  }]);\n\n  return Time;\n}(Component); // export class Time extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       time: new Date().toLocaleString()\n//     };\n//   }\n//   componentDidMount() {\n//     this.intervalID = setInterval(\n//         () => this.tick(),\n//         1000\n//     );\n//   }\n//   componentWillUnmount() {\n//     clearInterval(this.intervalID);\n//   }\n//   tick() {\n//     this.setState({\n//       time: new Date().toLocaleString()\n//     });\n//   }\n//   render() {\n//     return (\n//         <p className=\"App-clock\">\n//           The time is {this.state.time}.\n//         </p>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/alhamfebian/Documents/react-app/src/Time.js"],"names":["React","Component","Time","props","time","Date","state","day","getDay","month","getMonth","date","getDate","year","getFullYear","toLocaleTimeString","countingSecond","bind","intervalID","setInterval","clearInterval","setState","months","days"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AACE,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,QAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAEH,IAAI,CAACI,MAAL,EADM;AAEXC,MAAAA,KAAK,EAAEL,IAAI,CAACM,QAAL,EAFI;AAGXC,MAAAA,IAAI,EAAEP,IAAI,CAACQ,OAAL,EAHK;AAIXC,MAAAA,IAAI,EAAET,IAAI,CAACU,WAAL,EAJK;AAKXV,MAAAA,IAAI,EAAEA,IAAI,CAACW,kBAAL;AALK,KAAb;AAOA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AAViB;AAWlB;;AAZH;AAAA;AAAA,wCAcsB;AAAA;;AAClB,WAAKC,UAAL,GAAkBC,WAAW,CACzB;AAAA,eAAM,MAAI,CAACH,cAAL,EAAN;AAAA,OADyB,EAEzB,IAFyB,CAA7B;AAID;AAnBH;AAAA;AAAA,2CAoByB;AACrBI,MAAAA,aAAa,CAAC,KAAKF,UAAN,CAAb;AACD;AAtBH;AAAA;AAAA,qCAwBmB;AACf,UAAId,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,WAAKgB,QAAL,GAAiB;AACfd,QAAAA,GAAG,EAAEH,IAAI,CAACI,MAAL,EADU;AAEfC,QAAAA,KAAK,EAAEL,IAAI,CAACM,QAAL,EAFQ;AAGfC,QAAAA,IAAI,EAAEP,IAAI,CAACQ,OAAL,EAHS;AAIfC,QAAAA,IAAI,EAAET,IAAI,CAACU,WAAL,EAJS;AAKfV,QAAAA,IAAI,EAAEA,IAAI,CAACW,kBAAL;AALS,OAAjB;AAOD;AAjCH;AAAA;AAAA,6BAmCW;AACP,UAAMO,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAf;AACA,UAAMC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAb;AAEA,aAEI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACe,KAAKjB,KAAL,CAAWF,IAD1B,MAFJ;AAMD;AA7CH;;AAAA;AAAA,EAA0BH,SAA1B,E,CAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\n\nexport class Time extends Component{\n  constructor(props) {\n    super(props)\n    let time = new Date();\n    this.state = {\n      day: time.getDay(),\n      month: time.getMonth(),\n      date: time.getDate(),\n      year: time.getFullYear(),\n      time: time.toLocaleTimeString()\n    }\n    this.countingSecond = this.countingSecond.bind(this)\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(\n        () => this.countingSecond(),\n        1000\n    );\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  countingSecond() {\n    let time = new Date()\n    this.setState = ({\n      day: time.getDay(),\n      month: time.getMonth(),\n      date: time.getDate(),\n      year: time.getFullYear(),\n      time: time.toLocaleTimeString()\n    });\n  }\n\n  render() {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n\n    return (\n\n        <p className=\"App-clock\">\n          The time is {this.state.time}.\n        </p>\n    )\n  }\n}\n\n// export class Time extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       time: new Date().toLocaleString()\n//     };\n//   }\n//   componentDidMount() {\n//     this.intervalID = setInterval(\n//         () => this.tick(),\n//         1000\n//     );\n//   }\n//   componentWillUnmount() {\n//     clearInterval(this.intervalID);\n//   }\n//   tick() {\n//     this.setState({\n//       time: new Date().toLocaleString()\n//     });\n//   }\n//   render() {\n//     return (\n//         <p className=\"App-clock\">\n//           The time is {this.state.time}.\n//         </p>\n//     );\n//   }\n// }"]},"metadata":{},"sourceType":"module"}