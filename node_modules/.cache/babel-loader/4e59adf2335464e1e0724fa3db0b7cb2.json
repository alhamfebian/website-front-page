{"ast":null,"code":"import _regeneratorRuntime from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alhamfebian/Documents/react-app/src/WeatherApp.js\";\nimport React, { Component } from 'react';\nimport cloud from './cloud.png';\nimport haze from './haze.png';\nimport lightrain from './lightrain.png';\nimport rain from './rain.png';\nimport './App.css';\nexport var WeatherApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherApp, _Component);\n\n  function WeatherApp(props) {\n    var _this;\n\n    _classCallCheck(this, WeatherApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WeatherApp).call(this, props));\n    _this.state = {\n      temperature: '',\n      city: '',\n      humidity: '',\n      description: ''\n    };\n    return _this;\n  }\n\n  _createClass(WeatherApp, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var api_key, api_call, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                api_key = '26f7d92635dd0fa76b5fa962eb9d3d96';\n                _context.next = 3;\n                return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Depok,ID&APPID=\".concat(api_key));\n\n              case 3:\n                api_call = _context.sent;\n                _context.next = 6;\n                return api_call.json();\n\n              case 6:\n                response = _context.sent;\n                this.setState({\n                  temperature: Math.floor(response.main.temp - 273),\n                  city: response.name,\n                  humidity: response.main.humidity,\n                  description: response.weather[0].description\n                });\n                console.log(this.state);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.description === 'scattered clouds') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \" Today \"), React.createElement(\"div\", {\n          className: \"weather\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"cellWeather cell-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: lightrain,\n          className: \"cloud-logo\",\n          alt: \"cloud\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"cellWeather cell-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \" Temperature : \", this.state.temperature, \" \"), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \" Humidity : \", this.state.humidity, \" \"))));\n      } else {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \" yah \");\n      }\n    }\n  }]);\n\n  return WeatherApp;\n}(Component);","map":{"version":3,"sources":["/Users/alhamfebian/Documents/react-app/src/WeatherApp.js"],"names":["React","Component","cloud","haze","lightrain","rain","WeatherApp","props","state","temperature","city","humidity","description","api_key","fetch","api_call","json","response","setState","Math","floor","main","temp","name","weather","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AAGA,WAAaC,UAAb;AAAA;AAAA;AAAA;;AACE,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,WAAW,EAAE;AAJF,KAAb;AAFiB;AAQlB;;AATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYUC,gBAAAA,OAZV,GAYoB,kCAZpB;AAAA;AAAA,uBAa2BC,KAAK,2EAAoED,OAApE,EAbhC;;AAAA;AAaUE,gBAAAA,QAbV;AAAA;AAAA,uBAc2BA,QAAQ,CAACC,IAAT,EAd3B;;AAAA;AAcUC,gBAAAA,QAdV;AAeI,qBAAKC,QAAL,CAAe;AACbT,kBAAAA,WAAW,EAAEU,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,IAAT,CAAcC,IAAd,GAAqB,GAAhC,CADA;AAEbZ,kBAAAA,IAAI,EAAEO,QAAQ,CAACM,IAFF;AAGbZ,kBAAAA,QAAQ,EAAEM,QAAQ,CAACI,IAAT,CAAcV,QAHX;AAIbC,kBAAAA,WAAW,EAAEK,QAAQ,CAACO,OAAT,CAAiB,CAAjB,EAAoBZ;AAJpB,iBAAf;AAMAa,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;;AArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAwBW;AACP,UAAG,KAAKA,KAAL,CAAWI,WAAX,KAA2B,kBAA9B,EAAkD;AAChD,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAER,SAAV;AAAqB,UAAA,SAAS,EAAC,YAA/B;AAA4C,UAAA,GAAG,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,EAIE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAoB,KAAKI,KAAL,CAAWC,WAA/B,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAiB,KAAKD,KAAL,CAAWG,QAA5B,MAFF,CAJF,CAFF,CADJ;AAcD,OAfD,MAeO;AACL,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;AACF;AA3CH;;AAAA;AAAA,EAAgCV,SAAhC","sourcesContent":["import React, {Component} from 'react';\nimport cloud from './cloud.png';\nimport haze from './haze.png';\nimport lightrain from './lightrain.png';\nimport rain from './rain.png';\nimport './App.css';\n\n\nexport class WeatherApp extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      temperature: '',\n      city: '',\n      humidity: '',\n      description: ''\n    }\n  }\n\n  async componentDidMount() {\n    const api_key = '26f7d92635dd0fa76b5fa962eb9d3d96'\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=Depok,ID&APPID=${api_key}`)\n    const response = await api_call.json();\n    this.setState ({\n      temperature: Math.floor(response.main.temp - 273),\n      city: response.name,\n      humidity: response.main.humidity,\n      description: response.weather[0].description\n    });\n    console.log(this.state)\n  }\n\n  render() {\n    if(this.state.description === 'scattered clouds') {\n      return (\n          <div>\n            <h3> Today </h3>\n            <div className=\"weather\">\n              <div className=\"cellWeather cell-1\">\n                <img src={lightrain} className=\"cloud-logo\" alt=\"cloud\" />\n              </div>\n              <div className=\"cellWeather cell-2\">\n                <h1> Temperature : {this.state.temperature} </h1>\n                <h1> Humidity : {this.state.humidity} </h1>\n              </div>\n            </div>\n          </div>\n      )\n    } else {\n      return <h1> yah </h1>\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}