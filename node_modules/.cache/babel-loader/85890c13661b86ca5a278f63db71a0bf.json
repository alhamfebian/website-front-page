{"ast":null,"code":"import _classCallCheck from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alhamfebian/Documents/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alhamfebian/Documents/react-app/src/Time.js\";\nimport React, { Component } from 'react';\nexport var Time =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Time, _Component);\n\n  function Time(props) {\n    var _this;\n\n    _classCallCheck(this, Time);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Time).call(this, props));\n    _this.state = {\n      time: new Date().toLocaleString()\n    };\n    return _this;\n  }\n\n  _createClass(Time, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.intervalID = setInterval(function () {\n        return _this2.countingSecond();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.intervalID);\n    }\n  }, {\n    key: \"countingSecond\",\n    value: function countingSecond() {\n      var time = new Date();\n      this.setState = {\n        day: time.getDay(),\n        month: time.getMonth(),\n        date: time.getDate(),\n        year: time.getFullYear(),\n        time: time.toLocaleTimeString()\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      return React.createElement(\"div\", {\n        className: \"timeclock-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"timeclock-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, days[this.state.day], \", \", this.state.date, \" \", months[this.state.month], \" \", this.state.year, \" \", this.state.time));\n    }\n  }]);\n\n  return Time;\n}(Component); // export class Time extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       time: new Date().toLocaleString(),\n//       day: new Date().getDay()\n//     };\n//   }\n//\n//   tick() {\n//     this.setState({\n//       time: new Date().toLocaleString(),\n//       day: new Date().getDay(),\n//     });\n//   }\n//\n//   componentDidMount() {\n//     this.intervalID = setInterval(\n//         () => this.tick(),\n//         1000\n//     );\n//   }\n//   componentWillUnmount() {\n//     clearInterval(this.intervalID);\n//   }\n//\n//   render() {\n//     return (\n//         <p className=\"App-clock\">\n//           The time is {this.state.time}, {this.state.day}\n//         </p>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/alhamfebian/Documents/react-app/src/Time.js"],"names":["React","Component","Time","props","state","time","Date","toLocaleString","intervalID","setInterval","countingSecond","clearInterval","setState","day","getDay","month","getMonth","date","getDate","year","getFullYear","toLocaleTimeString","months","days"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AACE,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,cAAX;AADK,KAAb;AAFiB;AAKlB;;AANH;AAAA;AAAA,wCAQsB;AAAA;;AAClB,WAAKC,UAAL,GAAkBC,WAAW,CACzB;AAAA,eAAM,MAAI,CAACC,cAAL,EAAN;AAAA,OADyB,EAEzB,IAFyB,CAA7B;AAID;AAbH;AAAA;AAAA,2CAcyB;AACrBC,MAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACD;AAhBH;AAAA;AAAA,qCAkBmB;AACf,UAAIH,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,WAAKM,QAAL,GAAiB;AACfC,QAAAA,GAAG,EAAER,IAAI,CAACS,MAAL,EADU;AAEfC,QAAAA,KAAK,EAAEV,IAAI,CAACW,QAAL,EAFQ;AAGfC,QAAAA,IAAI,EAAEZ,IAAI,CAACa,OAAL,EAHS;AAIfC,QAAAA,IAAI,EAAEd,IAAI,CAACe,WAAL,EAJS;AAKff,QAAAA,IAAI,EAAEA,IAAI,CAACgB,kBAAL;AALS,OAAjB;AAOD;AA3BH;AAAA;AAAA,6BA6BW;AACP,UAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAf;AACA,UAAMC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAb;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCA,IAAI,CAAC,KAAKnB,KAAL,CAAWS,GAAZ,CAApC,QAAwD,KAAKT,KAAL,CAAWa,IAAnE,OAA0EK,MAAM,CAAC,KAAKlB,KAAL,CAAWW,KAAZ,CAAhF,OAAqG,KAAKX,KAAL,CAAWe,IAAhH,OAAuH,KAAKf,KAAL,CAAWC,IAAlI,CADF,CADJ;AAKD;AAtCH;;AAAA;AAAA,EAA0BJ,SAA1B,E,CAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\n\nexport class Time extends Component{\n  constructor(props) {\n    super(props)\n    this.state = {\n      time: new Date().toLocaleString()\n    }\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(\n        () => this.countingSecond(),\n        1000\n    );\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  countingSecond() {\n    let time = new Date()\n    this.setState = ({\n      day: time.getDay(),\n      month: time.getMonth(),\n      date: time.getDate(),\n      year: time.getFullYear(),\n      time: time.toLocaleTimeString()\n    });\n  }\n\n  render() {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n\n    return (\n        <div className='timeclock-main'>\n          <h3 className='timeclock-text'>{days[this.state.day]}, {this.state.date} {months[this.state.month]} {this.state.year} {this.state.time}</h3>\n        </div>\n    )\n  }\n}\n\n// export class Time extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       time: new Date().toLocaleString(),\n//       day: new Date().getDay()\n//     };\n//   }\n//\n//   tick() {\n//     this.setState({\n//       time: new Date().toLocaleString(),\n//       day: new Date().getDay(),\n//     });\n//   }\n//\n//   componentDidMount() {\n//     this.intervalID = setInterval(\n//         () => this.tick(),\n//         1000\n//     );\n//   }\n//   componentWillUnmount() {\n//     clearInterval(this.intervalID);\n//   }\n//\n//   render() {\n//     return (\n//         <p className=\"App-clock\">\n//           The time is {this.state.time}, {this.state.day}\n//         </p>\n//     );\n//   }\n// }"]},"metadata":{},"sourceType":"module"}